{
  "name": "Templates",
  "desc": "",
  "methods": [
    {
      "name": "tmpl",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "specificLengthTemplateVar",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "throwError",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "itobTemplateVar",
      "args": [],
      "returns": {
        "type": "byte[]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {},
  "state": {
    "schema": {
      "global": {
        "bytes": 0,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {},
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {}
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 11,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            1
          ]
        },
        {
          "teal": 12,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            2
          ]
        },
        {
          "teal": 13,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            3
          ]
        },
        {
          "teal": 14,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            4
          ]
        },
        {
          "teal": 21,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            5,
            6
          ]
        },
        {
          "teal": 22,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            7
          ]
        },
        {
          "teal": 23,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            8,
            9
          ]
        },
        {
          "teal": 24,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            10
          ]
        },
        {
          "teal": 25,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            11,
            12
          ]
        },
        {
          "teal": 26,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            13
          ]
        },
        {
          "teal": 27,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39
          ]
        },
        {
          "teal": 31,
          "source": "tests/contracts/general.algo.ts:24",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            40
          ]
        },
        {
          "teal": 36,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            41,
            42,
            43
          ]
        },
        {
          "teal": 37,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            44,
            45
          ]
        },
        {
          "teal": 38,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            46
          ]
        },
        {
          "teal": 42,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            47,
            48,
            49
          ]
        },
        {
          "teal": 46,
          "source": "tests/contracts/general.algo.ts:34",
          "pc": [
            50
          ]
        },
        {
          "teal": 47,
          "source": "tests/contracts/general.algo.ts:34",
          "pc": [
            51
          ]
        },
        {
          "teal": 51,
          "source": "tests/contracts/general.algo.ts:35",
          "pc": [
            52
          ]
        },
        {
          "teal": 52,
          "source": "tests/contracts/general.algo.ts:35",
          "pc": [
            53
          ]
        },
        {
          "teal": 53,
          "source": "tests/contracts/general.algo.ts:33",
          "pc": [
            54
          ]
        },
        {
          "teal": 58,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            55,
            56,
            57
          ]
        },
        {
          "teal": 59,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            58,
            59
          ]
        },
        {
          "teal": 60,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            60
          ]
        },
        {
          "teal": 64,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            61,
            62,
            63
          ]
        },
        {
          "teal": 68,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            64
          ]
        },
        {
          "teal": 69,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            65
          ]
        },
        {
          "teal": 70,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            66
          ]
        },
        {
          "teal": 71,
          "source": "tests/contracts/general.algo.ts:39",
          "pc": [
            67
          ]
        },
        {
          "teal": 72,
          "source": "tests/contracts/general.algo.ts:38",
          "pc": [
            68
          ]
        },
        {
          "teal": 77,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            69,
            70,
            71
          ]
        },
        {
          "teal": 78,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            72,
            73
          ]
        },
        {
          "teal": 79,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            74
          ]
        },
        {
          "teal": 83,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            75,
            76,
            77
          ]
        },
        {
          "teal": 86,
          "source": "tests/contracts/general.algo.ts:43",
          "errorMessage": "this is an error",
          "pc": [
            78
          ]
        },
        {
          "teal": 87,
          "source": "tests/contracts/general.algo.ts:42",
          "pc": [
            79
          ]
        },
        {
          "teal": 92,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            80,
            81,
            82,
            83,
            84,
            85
          ]
        },
        {
          "teal": 95,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            86,
            87,
            88
          ]
        },
        {
          "teal": 96,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            89
          ]
        },
        {
          "teal": 97,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            90
          ]
        },
        {
          "teal": 98,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            91
          ]
        },
        {
          "teal": 99,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            92,
            93,
            94
          ]
        },
        {
          "teal": 100,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            95
          ]
        },
        {
          "teal": 101,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            96
          ]
        },
        {
          "teal": 102,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            97
          ]
        },
        {
          "teal": 103,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            98
          ]
        },
        {
          "teal": 104,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            99,
            100
          ]
        },
        {
          "teal": 105,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            101
          ]
        },
        {
          "teal": 109,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            102,
            103,
            104
          ]
        },
        {
          "teal": 113,
          "source": "tests/contracts/general.algo.ts:47",
          "pc": [
            105
          ]
        },
        {
          "teal": 114,
          "source": "tests/contracts/general.algo.ts:47",
          "pc": [
            106
          ]
        },
        {
          "teal": 115,
          "source": "tests/contracts/general.algo.ts:46",
          "pc": [
            107
          ]
        },
        {
          "teal": 118,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            108,
            109
          ]
        },
        {
          "teal": 119,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            110
          ]
        },
        {
          "teal": 122,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            111,
            112,
            113,
            114,
            115,
            116
          ]
        },
        {
          "teal": 123,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            117,
            118,
            119
          ]
        },
        {
          "teal": 124,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            120,
            121,
            122,
            123
          ]
        },
        {
          "teal": 127,
          "source": "tests/contracts/general.algo.ts:24",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            124
          ]
        },
        {
          "teal": 130,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            125,
            126,
            127,
            128,
            129,
            130
          ]
        },
        {
          "teal": 131,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            131,
            132,
            133,
            134,
            135,
            136
          ]
        },
        {
          "teal": 132,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            137,
            138,
            139,
            140,
            141,
            142
          ]
        },
        {
          "teal": 133,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            143,
            144,
            145,
            146,
            147,
            148
          ]
        },
        {
          "teal": 134,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            149,
            150,
            151
          ]
        },
        {
          "teal": 135,
          "source": "tests/contracts/general.algo.ts:24",
          "pc": [
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            160,
            161
          ]
        },
        {
          "teal": 138,
          "source": "tests/contracts/general.algo.ts:24",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            162
          ]
        }
      ],
      "pcOffsetMethod": "cblocks"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCmludGNibG9jayBUTVBMX3VpbnQ2NFRtcGxWYXIgMSA2CmJ5dGVjYmxvY2sgVE1QTF9ieXRlczY0VG1wbFZhciBUTVBMX2J5dGVzMzJUbXBsVmFyIFRNUExfYnl0ZXNUbXBsVmFyCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjEwNC4xCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGdvcmFuZGZvdW5kYXRpb24vVEVBTFNjcmlwdAoKLy8gVGhpcyBjb250cmFjdCBpcyBjb21wbGlhbnQgd2l0aCBhbmQvb3IgaW1wbGVtZW50cyB0aGUgZm9sbG93aW5nIEFSQ3M6IFsgQVJDNCBdCgovLyBUaGUgZm9sbG93aW5nIGxpbmVzIG9mIFRFQUwgYXJlIHVzZWQgdG8gaW5pdGlhbGl6ZSB0ZW1wbGF0ZSB2YXJpYWJsZXMgaW4gc2NyYXRjaCBzbG90cwpieXRlYyAwIC8vIFRNUExfYnl0ZXM2NFRtcGxWYXIKYnl0ZWMgMSAvLyBUTVBMX2J5dGVzMzJUbXBsVmFyCmludGMgMCAvLyBUTVBMX3VpbnQ2NFRtcGxWYXIKYnl0ZWMgMiAvLyBUTVBMX2J5dGVzVG1wbFZhcgoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKaW50IDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpjcmVhdGVfTm9PcCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQKCipOT1RfSU1QTEVNRU5URUQ6CgkvLyBUaGUgcmVxdWVzdGVkIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhpcyBjb250cmFjdC4gQXJlIHlvdSB1c2luZyB0aGUgY29ycmVjdCBPbkNvbXBsZXRlPyBEaWQgeW91IHNldCB5b3VyIGFwcCBJRD8KCWVycgoKLy8gdG1wbCgpdm9pZAoqYWJpX3JvdXRlX3RtcGw6CgkvLyBleGVjdXRlIHRtcGwoKXZvaWQKCWNhbGxzdWIgdG1wbAoJaW50IDEKCXJldHVybgoKLy8gdG1wbCgpOiB2b2lkCnRtcGw6Cglwcm90byAwIDAKCgkvLyB0ZXN0cy9jb250cmFjdHMvZ2VuZXJhbC5hbGdvLnRzOjM0CgkvLyBsb2codGhpcy5ieXRlc1RtcGxWYXIpCglieXRlYyAyIC8vIFRNUExfYnl0ZXNUbXBsVmFyCglsb2cKCgkvLyB0ZXN0cy9jb250cmFjdHMvZ2VuZXJhbC5hbGdvLnRzOjM1CgkvLyBhc3NlcnQodGhpcy51aW50NjRUbXBsVmFyKQoJaW50YyAwIC8vIFRNUExfdWludDY0VG1wbFZhcgoJYXNzZXJ0CglyZXRzdWIKCi8vIHNwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXIoKXZvaWQKKmFiaV9yb3V0ZV9zcGVjaWZpY0xlbmd0aFRlbXBsYXRlVmFyOgoJLy8gZXhlY3V0ZSBzcGVjaWZpY0xlbmd0aFRlbXBsYXRlVmFyKCl2b2lkCgljYWxsc3ViIHNwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXIKCWludCAxCglyZXR1cm4KCi8vIHNwZWNpZmljTGVuZ3RoVGVtcGxhdGVWYXIoKTogdm9pZApzcGVjaWZpY0xlbmd0aFRlbXBsYXRlVmFyOgoJcHJvdG8gMCAwCgoJLy8gdGVzdHMvY29udHJhY3RzL2dlbmVyYWwuYWxnby50czozOQoJLy8gZWQyNTUxOVZlcmlmeUJhcmUodGhpcy5ieXRlc1RtcGxWYXIsIHRoaXMuYnl0ZXM2NFRtcGxWYXIsIHRoaXMuYnl0ZXMzMlRtcGxWYXIpCglieXRlYyAyIC8vIFRNUExfYnl0ZXNUbXBsVmFyCglieXRlYyAwIC8vIFRNUExfYnl0ZXM2NFRtcGxWYXIKCWJ5dGVjIDEgLy8gVE1QTF9ieXRlczMyVG1wbFZhcgoJZWQyNTUxOXZlcmlmeV9iYXJlCglyZXRzdWIKCi8vIHRocm93RXJyb3IoKXZvaWQKKmFiaV9yb3V0ZV90aHJvd0Vycm9yOgoJLy8gZXhlY3V0ZSB0aHJvd0Vycm9yKCl2b2lkCgljYWxsc3ViIHRocm93RXJyb3IKCWludCAxCglyZXR1cm4KCi8vIHRocm93RXJyb3IoKTogdm9pZAp0aHJvd0Vycm9yOgoJcHJvdG8gMCAwCgoJLy8gdGhpcyBpcyBhbiBlcnJvcgoJZXJyCglyZXRzdWIKCi8vIGl0b2JUZW1wbGF0ZVZhcigpYnl0ZVtdCiphYmlfcm91dGVfaXRvYlRlbXBsYXRlVmFyOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgaXRvYlRlbXBsYXRlVmFyKClieXRlW10KCWNhbGxzdWIgaXRvYlRlbXBsYXRlVmFyCglkdXAKCWxlbgoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWNvbmNhdAoJY29uY2F0Cglsb2cKCWludCAxCglyZXR1cm4KCi8vIGl0b2JUZW1wbGF0ZVZhcigpOiBieXRlcwppdG9iVGVtcGxhdGVWYXI6Cglwcm90byAwIDEKCgkvLyB0ZXN0cy9jb250cmFjdHMvZ2VuZXJhbC5hbGdvLnRzOjQ3CgkvLyByZXR1cm4gaXRvYih0aGlzLnVpbnQ2NFRtcGxWYXIpOwoJaW50YyAwIC8vIFRNUExfdWludDY0VG1wbFZhcgoJaXRvYgoJcmV0c3ViCgoqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uOgoJaW50IDEKCXJldHVybgoKKmNyZWF0ZV9Ob09wOgoJcHVzaGJ5dGVzIDB4Yjg0NDdiMzYgLy8gbWV0aG9kICJjcmVhdGVBcHBsaWNhdGlvbigpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweDlhNzFkMmI0IC8vIG1ldGhvZCAidG1wbCgpdm9pZCIKCXB1c2hieXRlcyAweGRmNGQ1YzNiIC8vIG1ldGhvZCAic3BlY2lmaWNMZW5ndGhUZW1wbGF0ZVZhcigpdm9pZCIKCXB1c2hieXRlcyAweDNkODcwZDg3IC8vIG1ldGhvZCAidGhyb3dFcnJvcigpdm9pZCIKCXB1c2hieXRlcyAweGJjMGIxNzA2IC8vIG1ldGhvZCAiaXRvYlRlbXBsYXRlVmFyKClieXRlW10iCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX3RtcGwgKmFiaV9yb3V0ZV9zcGVjaWZpY0xlbmd0aFRlbXBsYXRlVmFyICphYmlfcm91dGVfdGhyb3dFcnJvciAqYWJpX3JvdXRlX2l0b2JUZW1wbGF0ZVZhcgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": {
    "bytesTmplVar": {
      "type": "byte[]"
    },
    "uint64TmplVar": {
      "type": "uint64"
    },
    "bytes32TmplVar": {
      "type": "byte[32]"
    },
    "bytes64TmplVar": {
      "type": "byte[64]"
    }
  },
  "scratchVariables": {
    "bytesTmplVar": {
      "type": "byte[]",
      "slot": 200
    },
    "uint64TmplVar": {
      "type": "uint64",
      "slot": 201
    },
    "bytes32TmplVar": {
      "type": "byte[32]",
      "slot": 202
    },
    "bytes64TmplVar": {
      "type": "byte[64]",
      "slot": 203
    }
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 3,
      "minor": 26,
      "patch": 0,
      "commitHash": "0d10b244"
    }
  }
}
